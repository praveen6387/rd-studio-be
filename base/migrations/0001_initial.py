# Generated by Django 5.2.7 on 2025-10-11 23:51

import django.contrib.auth.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MediaLibrary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('media_unique_id', models.CharField(max_length=200, unique=True)),
                ('media_type', models.IntegerField(choices=[(0, 'Image'), (1, 'Video'), (2, 'Flipbook')])),
                ('media_title', models.CharField(blank=True, max_length=200, null=True)),
                ('media_description', models.TextField(blank=True, null=True)),
                ('is_favorite', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Media Libraries',
                'db_table': 'media_libraries',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('username', models.CharField(default='', max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('role', models.IntegerField(choices=[(0, 'customer'), (1, 'admin'), (3, 'super admin'), (2, 'operation')], default=0)),
                ('profile_picture', models.CharField(max_length=128, null=True)),
                ('gender', models.CharField(choices=[(0, 'male'), (1, 'female'), (2, 'other')], max_length=50, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MediaLibraryItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('media_url', models.URLField(max_length=500)),
                ('media_item_title', models.CharField(blank=True, max_length=200, null=True)),
                ('media_item_description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('media_library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_library_items', to='base.medialibrary')),
            ],
            options={
                'db_table': 'media_library_items',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserEvents',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('function_start_date', models.DateField(blank=True, null=True)),
                ('function_end_date', models.DateField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(0, 'pending'), (1, 'approved'), (2, 'rejected')], default=0)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_functionalities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Functionalities',
                'db_table': 'user_events',
            },
        ),
        migrations.AddField(
            model_name='medialibrary',
            name='user_functionality',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='media_libraries', to='base.userevents'),
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=20)),
                ('first_address', models.CharField(max_length=128, null=True)),
                ('second_address', models.CharField(max_length=128, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('state', models.CharField(max_length=50, null=True)),
                ('zip_code', models.CharField(max_length=10, null=True)),
                ('country', models.CharField(max_length=50, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_addresses',
                'unique_together': {('user', 'is_primary')},
            },
        ),
    ]
